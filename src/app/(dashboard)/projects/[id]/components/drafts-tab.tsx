"use client"

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Mail, FileText, Send, Loader2 } from "lucide-react"
import { toast } from "sonner"
import { type Draft } from "@/lib/schemas/draft"
import { type GeneratedDraft } from "../types"

interface DraftsTabProps {
  drafts: Draft[];
  isLoading: boolean;
  onDraftSelected: (draft: GeneratedDraft) => void;
  onOpenGetResponseModal: () => void;
}

export function DraftsTab({ 
  drafts, 
  isLoading, 
  onDraftSelected, 
  onOpenGetResponseModal 
}: DraftsTabProps) {
  return (
    <Card className="tactile-card paper-texture">
      <CardHeader>
        <CardTitle className="font-headline text-charcoal flex items-center gap-2">
          <Mail className="h-5 w-5" />
          Email Drafts
        </CardTitle>
        <CardDescription className="font-body text-charcoal/80">
          Manage your email campaign drafts and templates generated by AI.
        </CardDescription>
      </CardHeader>
      <CardContent>
        {isLoading ? (
          <div className="flex items-center justify-center py-8">
            <Loader2 className="h-6 w-6 animate-spin text-charcoal/60" />
            <span className="ml-2 text-charcoal/60 font-body">Loading drafts...</span>
          </div>
        ) : drafts.length === 0 ? (
          <div className="text-center py-8">
            <Mail className="h-12 w-12 text-charcoal/40 mx-auto mb-4" />
            <h3 className="text-lg font-headline font-semibold mb-2 text-charcoal">No drafts yet</h3>
            <p className="text-charcoal/60 font-body mb-4">
              Generate your first email draft using the Generate tab, or create one manually.
            </p>
            <Button className="tactile-button">Create Draft</Button>
          </div>
        ) : (
          <div className="space-y-4">
            {drafts.map((draft) => (
              <div 
                key={draft._id} 
                className="tactile-card bg-parchment/50 p-6 border border-charcoal/10"
              >
                <div className="flex items-start justify-between mb-4">
                  <div className="flex-1">
                    <h4 className="font-headline font-semibold text-charcoal text-lg mb-1">
                      {draft.subject}
                    </h4>
                    <div className="flex items-center gap-4 mb-2">
                      <Badge variant="secondary" className="text-xs">
                        {draft.angle.toUpperCase()}
                      </Badge>
                      <span className="text-xs text-charcoal/60 font-body">
                        {new Date(draft.createdAt).toLocaleDateString()} at {new Date(draft.createdAt).toLocaleTimeString()}
                      </span>
                      {draft.context_chunk_ids && draft.context_chunk_ids.length > 0 && (
                        <span className="text-xs text-charcoal/60 font-body">
                          {draft.context_chunk_ids.length} context chunks
                        </span>
                      )}
                    </div>
                    {draft.preheader && (
                      <p className="text-sm text-charcoal/80 font-body mb-3">
                        {draft.preheader}
                      </p>
                    )}
                  </div>
                </div>
                
                {/* Email Content Preview */}
                <div className="mb-4">
                  <label className="text-sm font-body font-medium text-charcoal mb-2 block">
                    Email Preview
                  </label>
                  <div 
                    className="bg-white rounded-squircle-sm p-4 border border-charcoal/10 max-h-48 overflow-y-auto"
                    dangerouslySetInnerHTML={{ __html: draft.formats.html }}
                  />
                </div>

                {/* Action Buttons */}
                <div className="flex gap-2 pt-2">
                  <Button 
                    size="sm"
                    className="tactile-button-secondary"
                    onClick={() => {
                      // TODO: Edit draft functionality
                      toast.info('Edit functionality coming soon!')
                    }}
                  >
                    <FileText className="h-4 w-4 mr-1" />
                    Edit
                  </Button>
                  
                  <Button 
                    size="sm"
                    className="tactile-button-secondary"
                    onClick={() => {
                      // Copy HTML to clipboard
                      navigator.clipboard.writeText(draft.formats.html)
                      toast.success('HTML copied to clipboard!')
                    }}
                  >
                    Copy HTML
                  </Button>
                  
                  <Button 
                    size="sm"
                    className="tactile-button"
                    onClick={() => {
                      // Set this draft as the current generated draft for sending to GetResponse
                      onDraftSelected({
                        subject: draft.subject,
                        html: draft.formats.html,
                        preheader: draft.preheader || ''
                      })
                      onOpenGetResponseModal()
                    }}
                  >
                    <Send className="h-4 w-4 mr-1" />
                    Send to GR
                  </Button>
                </div>
              </div>
            ))}
          </div>
        )}
      </CardContent>
    </Card>
  )
}
