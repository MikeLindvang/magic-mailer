---
alwaysApply: true
---
# CSS Styling Guidelines

## Global CSS Structure

The tactile design system requires specific global CSS patterns defined in [src/app/globals.css](mdc:src/app/globals.css).

### Required Font Imports
Always import both fonts with full weight ranges:

```css
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
```

### CSS Custom Properties
Maintain these exact color values in `:root`:

```css
:root {
  /* Tactile Digital Color Variables */
  --parchment: #F8F5EE;
  --charcoal: #2B2A2D; 
  --terracotta: #D98666;
  --sage: #88A89A;
}
```

### Base Layer Requirements
The `@layer base` must establish tactile foundations:

```css
@layer base {
  body {
    @apply bg-parchment bg-grain text-charcoal font-body;
    background-attachment: fixed;
  }
  
  /* Typography hierarchy */
  h1, h2, h3, h4, h5, h6 {
    @apply font-headline text-charcoal;
  }
  
  p, span, div, a, button, input, textarea {
    @apply font-body;
  }
}
```

## Component Layer Patterns

### Tactile Card Component
```css
.tactile-card {
  @apply bg-parchment rounded-squircle shadow-paper border border-charcoal/10;
  position: relative;
}

.tactile-card::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: var(--parchment);
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(43, 42, 45, 0.02) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(136, 168, 154, 0.02) 0%, transparent 50%);
  border-radius: inherit;
  pointer-events: none;
  z-index: -1;
}
```

### Tactile Button Components
```css
.tactile-button {
  @apply bg-terracotta text-parchment font-body font-medium px-6 py-3 rounded-squircle shadow-paper;
  @apply hover:bg-terracotta/90 hover:shadow-paper-lg transition-all duration-200;
  @apply active:shadow-paper-inner active:translate-y-0.5;
}

.tactile-button-secondary {
  @apply bg-sage text-charcoal font-body font-medium px-6 py-3 rounded-squircle shadow-paper;
  @apply hover:bg-sage/90 hover:shadow-paper-lg transition-all duration-200;
  @apply active:shadow-paper-inner active:translate-y-0.5;
}
```

### Tactile Input Component
```css
.tactile-input {
  @apply bg-parchment/50 border-2 border-charcoal/20 rounded-squircle-sm px-4 py-2 font-body;
  @apply focus:border-sage focus:outline-none focus:shadow-paper-inner transition-all duration-200;
}
```

### Paper Texture Overlay
```css
.paper-texture {
  position: relative;
}

.paper-texture::after {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background-image: 
    radial-gradient(circle at 20% 80%, rgba(43, 42, 45, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(217, 134, 102, 0.02) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(136, 168, 154, 0.02) 0%, transparent 50%);
  pointer-events: none;
  border-radius: inherit;
}
```

## CSS Anti-Patterns

### ❌ Avoid Generic Shadows
```css
/* Don't use standard box-shadows */
.card {
  box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Too generic */
}

/* Use tactile paper shadows instead */
.card {
  @apply shadow-paper; /* ✅ Correct */
}
```

### ❌ Avoid Sharp Corners
```css
/* Don't use standard border-radius */
.button {
  border-radius: 8px; /* Too geometric */
}

/* Use organic squircle shapes */
.button {
  @apply rounded-squircle; /* ✅ Correct */
}
```

### ❌ Avoid Cold Colors
```css
/* Don't use pure whites, grays, or bright colors */
.container {
  background: #ffffff; /* Too cold */
  color: #000000; /* Too harsh */
}

/* Use warm tactile colors */
.container {
  @apply bg-parchment text-charcoal; /* ✅ Correct */
}
```

## Required CSS Architecture

### Layer Order
```css
@import url(/* fonts */);
@tailwind base;
@tailwind components; 
@tailwind utilities;

@layer base {
  /* Global resets and typography */
}

@layer components {
  /* Tactile component classes */
}
```

### Pseudo-Element Usage
- Use `::before` for background textures and depth
- Use `::after` for overlay effects and paper textures
- Always set `pointer-events: none` on decorative pseudo-elements
- Ensure `border-radius: inherit` for consistent shapes

### Transition Standards
All interactive elements must have smooth transitions:
```css
transition: all 0.2s ease;
```

### Z-Index Management
- Background textures: `z-index: -1`
- Content: `z-index: auto` (default)
- Overlays: `z-index: 1` and above